// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profile {
  id             String  @id @default(uuid())
  userId         String  @unique
  username       String  @unique
  email          String  @unique
  password       String
  profilePicture String?
  bio            String?
  location       String?

  friends  Profile[] @relation("Friendship")
  friendOf Profile[] @relation("Friendship")

  matches   Profile[] @relation("Match")
  matchedBy Profile[] @relation("Match")

  groups Group[] @relation("GroupMembers")

  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")

  Group   Group?  @relation(fields: [groupId], references: [id])
  groupId String?

  adminOf Group[] @relation("GroupAdmins")
}

model Group {
  id          String    @id @default(uuid())
  name        String
  description String?
  members     Profile[] @relation("GroupMembers")
  messages    Message[]
  admin       Profile[] @relation("GroupAdmins")
  image       String?
  Profile     Profile[]
}

model Message {
  id         String   @id @default(uuid())
  content    String
  sender     Profile  @relation("SentMessages", fields: [senderId], references: [id])
  senderId   String
  receiver   Profile  @relation("ReceivedMessages", fields: [receiverId], references: [id])
  receiverId String
  group      Group    @relation(fields: [groupId], references: [id])
  groupId    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Question {
  id        String   @id @default(uuid())
  question  String
  answer    String
  createdAt DateTime @default(now())
  startAt   DateTime
  endAt     DateTime
}
